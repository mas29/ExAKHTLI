shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
rm(list=ls())
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
tmp <- c("1","2")
setNames(tmp,tmp)
tmp
tmp[["1"]]
tmp <- c("A","b")
tmp <- setNames(tmp, tmp)
tmp
tmp[["A"]]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("shinyFiles")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
tmp <- c(1,2,3)
tmp^2
shiny::runApp()
-8224126^0.001
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
require(xlsx)
shiny::runApp()
shiny::runApp()
rm(list=ls())
shiny::runApp()
install.packages()
installed.packages()
remove.packages("xlsx")
installed.packages()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
shiny::runApp()
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
options(shiny.error=browser)
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
shiny::runApp()
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
man options
options?
?
?help
?deployApp
?options
shiny::runApp()
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
cols <- c("#005EE8", "#D23940") #cols <- c("#005EE8", "#FF460C")
cols_other <- c("#03B363","#6D41A0")
limit <- 1 # instantaneous speed (um/min) limit for shaded region in instantaneous speed graph
sphere_var <- (1/3)
tracks_path <- "/Users/maiasmith/Documents/ICL/data/trackmate_tracks.RData"
spaces.surf_path <- "~/maia/data/internal/hsc_movement/R/spaces.surf.RData"
prog_as3ds_feats_path <- "~/maia/data/internal/hsc_movement/R/prog_as3ds_feats/all.RData"
ashape_feat_path <- "/cluster/home/student7/maia/data/internal/hsc_movement/R/ashapes_features.RData"
ashapes_path <- "/Users/maiasmith/Documents/ICL/data/ashapes.RData"
triangles_path <- "~/maia/data/internal/hsc_movement/R/all_triangles.RData"
sphere_triangles_path <- "~/maia/data/internal/hsc_movement/R/sphere/all_triangles_sphere.RData"
# LIBRARIES
library(ggplot2)
require(cowplot)
library(plyr)
library(reshape2)
library(car)
library(gridExtra)
library(rgl)
library(alphashape3d)
library(data.table)
library(plotrix)
# SOURCES
source("/Users/maiasmith/Documents/ICL/scripts/functions.plotting.R")
source("/Users/maiasmith/Documents/ICL/scripts/functions.track_space.R")
pca_vars <- do.call("rbind", lapply(cell_ids, function(cur.cell_id) get_pca_vars(cur.cell_id, spaces.surf)))
load(tracks_path)
load(spaces.surf_path)
load(prog_as3ds_feats_path)
load(ashape_feat_path)
load(ashapes_path)
load(triangles_path)
all_triangles_df <- do.call("rbind",all_triangles)
load(sphere_triangles_path)
sphere_triangles <- do.call("rbind",all_triangles)
cell_ids <- unique(tracks$cell_id)
cell_ids_health <- unique(tracks[,c("cell_id","health_status")])
pca_vars <- do.call("rbind", lapply(cell_ids, function(cur.cell_id) get_pca_vars(cur.cell_id, spaces.surf)))
load(spaces.surf_path)
spaces.surf_path <- "/Users/maiasmith/Documents/ICL/data/spaces.surf.RData"
load(spaces.surf_path)
head(spaces.surf)
pca_vars <- do.call("rbind", lapply(cell_ids, function(cur.cell_id) get_pca_vars(cur.cell_id, spaces.surf)))
pca_vars <- merge(pca_vars, cell_ids_health, all.x=TRUE, by="cell_id")
# --> percentages
pca_vars_perc <- pca_vars
pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id", "health_status"))] <- t(apply( pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id", "health_status"))], 1, function(x) { x*100.0/sum(x) } ))
# plot
pca_vars_perc_melted <- melt(pca_vars_perc, id.vars=c("cell_id", "health_status"), variable.name = "pc", value.name = "variance")
pca_vars_perc_melted$frac <- pca_vars_perc_melted$variance/100
pca_vars_perc_melted$pc <- recode(pca_vars_perc_melted$pc, "'Comp.1'='PC1';'Comp.2'='PC2';'Comp.3'='PC3'")
pca_vars <- do.call("rbind", lapply(cell_ids, function(cur.cell_id) get_pca_vars(cur.cell_id, spaces.surf)))
head(pca_vars)
pca_vars <- merge(pca_vars, cell_ids_health, all.x=TRUE, by="cell_id")
head(pca_vars)
# --> percentages
pca_vars_perc <- pca_vars
pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id", "health_status"))] <- t(apply( pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id", "health_status"))], 1, function(x) { x*100.0/sum(x) } ))
head(pca_vars_perc)
pca_vars_perc_melted <- melt(pca_vars_perc, id.vars=c("cell_id", "health_status"), variable.name = "pc", value.name = "variance")
head(pca_vars_perc_melted)
pca_vars_perc_melted$frac <- pca_vars_perc_melted$variance/100
pca_vars_perc_melted$frac <- pca_vars_perc_melted$value/100
pca_vars_perc_melted$pc <- recode(pca_vars_perc_melted$pc, "'Comp.1'='PC1';'Comp.2'='PC2';'Comp.3'='PC3'")
pca_vars_perc_melted$pc <- recode(pca_vars_perc_melted$variable, "'Comp.1'='PC1';'Comp.2'='PC2';'Comp.3'='PC3'") # variable was "pc"
ggplot(pca_vars_perc_melted, aes(x=pc, y=frac)) + geom_boxplot(aes(fill=health_status), alpha=1) + ggtitle("Box Plot of PCA Variance (Fraction) for the 3 PC's") + geom_hline(aes(yintercept=sphere_var)) + geom_text(aes(0,sphere_var,label = "sphere", vjust=-1, hjust=-0.4)) + scale_fill_manual(values=cols, name="Health", breaks=c("healthy", "trich"), labels=c("Healthy", "Infected"), guide = guide_legend(direction = "vertical")) + xlab("") + ylab("") + theme(axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
pca_vars_perc_melted <- melt(pca_vars_perc, id.vars=c("cell_id", "health_status"), variable.name = "pc", value.name = "variance")
pca_vars_perc_melted$frac <- pca_vars_perc_melted$value/100 # value was "variance"
pca_vars_perc_melted$pc <- recode(pca_vars_perc_melted$variable, "'Comp.1'='PC1';'Comp.2'='PC2';'Comp.3'='PC3'") # variable was "pc"
ggplot(pca_vars_perc_melted, aes(x=pc, y=frac)) + geom_boxplot(aes(fill=health_status), alpha=1) + ggtitle("Box Plot of PCA Variance (Fraction) for the 3 PC's") + geom_hline(aes(yintercept=sphere_var)) + geom_text(aes(0,sphere_var,label = "sphere", vjust=-1, hjust=-0.4)) + scale_fill_manual(values=cols, name="Health", breaks=c("healthy", "trich"), labels=c("Healthy", "Infected"), guide = guide_legend(direction = "vertical")) + xlab("") + ylab("") + theme(axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
head(pca_vars_perc_melted)
ggplot(pca_vars_perc_melted, aes(x=pc, y=frac)) + geom_boxplot(aes(fill=health_status), alpha=1)
library(reshape2)
pca_vars_perc_melted <- melt(pca_vars_perc, id.vars=c("cell_id", "health_status"), variable.name = "pc", value.name = "variance")
head(ppca_vars_perc_melted)
head(pca_vars_perc_melted)
pca_vars_perc_melted <- reshape2::melt(pca_vars_perc, id.vars=c("cell_id", "health_status"), variable.name = "pc", value.name = "variance")
head(pca_vars_perc_melted)
pca_vars_perc_melted <- reshape::melt(pca_vars_perc, id.vars=c("cell_id", "health_status"), variable.name = "pc", value.name = "variance")
head(pca_vars_perc_melted)
ggplot(pca_vars_perc_melted, aes(x=variable, y=frac)) + geom_boxplot(aes(fill=health_status), alpha=1) + ggtitle("Box Plot of PCA Variance (Fraction) for the 3 PC's") + geom_hline(aes(yintercept=sphere_var)) + geom_text(aes(0,sphere_var,label = "sphere", vjust=-1, hjust=-0.4)) + scale_fill_manual(values=cols, name="Health", breaks=c("healthy", "trich"), labels=c("Healthy", "Infected"), guide = guide_legend(direction = "vertical")) + xlab("") + ylab("") + theme(axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
pca_vars_perc_melted <- melt(pca_vars_perc, id.vars=c("cell_id", "health_status")) # , variable.name = "pc", value.name = "variance"
pca_vars_perc_melted$frac <- pca_vars_perc_melted$value/100 # value was "variance"
pca_vars_perc_melted$pc <- recode(pca_vars_perc_melted$variable, "'Comp.1'='PC1';'Comp.2'='PC2';'Comp.3'='PC3'") # variable was "pc"
ggplot(pca_vars_perc_melted, aes(x=variable, y=frac)) + geom_boxplot(aes(fill=health_status), alpha=1) + ggtitle("Box Plot of PCA Variance (Fraction) for the 3 PC's") + geom_hline(aes(yintercept=sphere_var)) + geom_text(aes(0,sphere_var,label = "sphere", vjust=-1, hjust=-0.4)) + scale_fill_manual(values=cols, name="Health", breaks=c("healthy", "trich"), labels=c("Healthy", "Infected"), guide = guide_legend(direction = "vertical")) + xlab("") + ylab("") + theme(axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
ggplot(pca_vars_perc_melted, aes(x=variable, y=frac)) + geom_boxplot(aes(fill=health_status), alpha=1)
colnames(pca_vars_perc_melted)
ggplot(pca_vars_perc_melted, aes(x=variable, y=frac)) + geom_boxplot(aes(fill=health_status), alpha=1)
rm(list=ls())
cols <- c("#005EE8", "#D23940") #cols <- c("#005EE8", "#FF460C")
cols_other <- c("#03B363","#6D41A0")
limit <- 1 # instantaneous speed (um/min) limit for shaded region in instantaneous speed graph
sphere_var <- (1/3)
tracks_path <- "/Users/maiasmith/Documents/ICL/data/trackmate_tracks.RData"
spaces.surf_path <- "/Users/maiasmith/Documents/ICL/data/spaces.surf.RData"
prog_as3ds_feats_path <- "~/maia/data/internal/hsc_movement/R/prog_as3ds_feats/all.RData"
ashape_feat_path <- "/cluster/home/student7/maia/data/internal/hsc_movement/R/ashapes_features.RData"
ashapes_path <- "/Users/maiasmith/Documents/ICL/data/ashapes.RData"
triangles_path <- "~/maia/data/internal/hsc_movement/R/all_triangles.RData"
sphere_triangles_path <- "~/maia/data/internal/hsc_movement/R/sphere/all_triangles_sphere.RData"
library(ggplot2)
require(cowplot)
library(plyr)
library(reshape2)
library(car)
library(gridExtra)
library(rgl)
library(alphashape3d)
library(data.table)
library(plotrix)
source("/Users/maiasmith/Documents/ICL/scripts/functions.plotting.R")
source("/Users/maiasmith/Documents/ICL/scripts/functions.track_space.R")
load(spaces.surf_path)
cell_ids <- unique(tracks$cell_id)
cell_ids_health <- unique(tracks[,c("cell_id","health_status")])
load(tracks_path)
cell_ids <- unique(tracks$cell_id)
# get pca variances
# --> count
pca_vars <- do.call("rbind", lapply(cell_ids, function(cur.cell_id) get_pca_vars(cur.cell_id, spaces.surf)))
pca_vars <- merge(pca_vars, cell_ids_health, all.x=TRUE, by="cell_id")
# --> percentages
pca_vars_perc <- pca_vars
pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id", "health_status"))] <- t(apply( pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id", "health_status"))], 1, function(x) { x*100.0/sum(x) } ))
# plot
pca_vars_perc_melted <- melt(pca_vars_perc, id.vars=c("cell_id", "health_status")) # , variable.name = "pc", value.name = "variance"
pca_vars_perc_melted$frac <- pca_vars_perc_melted$value/100 # value was "variance"
pca_vars_perc_melted$pc <- recode(pca_vars_perc_melted$variable, "'Comp.1'='PC1';'Comp.2'='PC2';'Comp.3'='PC3'") # variable was "pc"
cell_ids_health <- unique(tracks[,c("cell_id","health_status")])
# get pca variances
# --> count
pca_vars <- do.call("rbind", lapply(cell_ids, function(cur.cell_id) get_pca_vars(cur.cell_id, spaces.surf)))
pca_vars <- merge(pca_vars, cell_ids_health, all.x=TRUE, by="cell_id")
# --> percentages
pca_vars_perc <- pca_vars
pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id", "health_status"))] <- t(apply( pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id", "health_status"))], 1, function(x) { x*100.0/sum(x) } ))
# plot
pca_vars_perc_melted <- melt(pca_vars_perc, id.vars=c("cell_id", "health_status")) # , variable.name = "pc", value.name = "variance"
pca_vars_perc_melted$frac <- pca_vars_perc_melted$value/100 # value was "variance"
pca_vars_perc_melted$pc <- recode(pca_vars_perc_melted$variable, "'Comp.1'='PC1';'Comp.2'='PC2';'Comp.3'='PC3'") # variable was "pc"
ggplot(pca_vars_perc_melted, aes(x=variable, y=frac)) + geom_boxplot(aes(fill=health_status), alpha=1) + ggtitle("Box Plot of PCA Variance (Fraction) for the 3 PC's") + geom_hline(aes(yintercept=sphere_var)) + geom_text(aes(0,sphere_var,label = "sphere", vjust=-1, hjust=-0.4)) + scale_fill_manual(values=cols, name="Health", breaks=c("healthy", "trich"), labels=c("Healthy", "Infected"), guide = guide_legend(direction = "vertical")) + xlab("") + ylab("") + theme(axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
ggplot(pca_vars_perc_melted, aes(x=variable, y=frac)) + geom_boxplot(aes(fill=health_status), alpha=1)
rm(list=ls())
cols <- c("#005EE8", "#D23940") #cols <- c("#005EE8", "#FF460C")
cols_other <- c("#03B363","#6D41A0")
limit <- 1 # instantaneous speed (um/min) limit for shaded region in instantaneous speed graph
sphere_var <- (1/3)
tracks_path <- "/Users/maiasmith/Documents/ICL/data/trackmate_tracks.RData"
spaces.surf_path <- "/Users/maiasmith/Documents/ICL/data/spaces.surf.RData"
prog_as3ds_feats_path <- "~/maia/data/internal/hsc_movement/R/prog_as3ds_feats/all.RData"
ashape_feat_path <- "/cluster/home/student7/maia/data/internal/hsc_movement/R/ashapes_features.RData"
ashapes_path <- "/Users/maiasmith/Documents/ICL/data/ashapes.RData"
triangles_path <- "~/maia/data/internal/hsc_movement/R/all_triangles.RData"
sphere_triangles_path <- "~/maia/data/internal/hsc_movement/R/sphere/all_triangles_sphere.RData"
library(ggplot2)
library(reshape2)
source("/Users/maiasmith/Documents/ICL/scripts/functions.plotting.R")
source("/Users/maiasmith/Documents/ICL/scripts/functions.track_space.R")
load(tracks_path)
load(spaces.surf_path)
cell_ids <- unique(tracks$cell_id)
cell_ids_health <- unique(tracks[,c("cell_id","health_status")])
# get pca variances
# --> count
pca_vars <- do.call("rbind", lapply(cell_ids, function(cur.cell_id) get_pca_vars(cur.cell_id, spaces.surf)))
pca_vars <- merge(pca_vars, cell_ids_health, all.x=TRUE, by="cell_id")
# --> percentages
pca_vars_perc <- pca_vars
pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id", "health_status"))] <- t(apply( pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id", "health_status"))], 1, function(x) { x*100.0/sum(x) } ))
# plot
pca_vars_perc_melted <- melt(pca_vars_perc, id.vars=c("cell_id", "health_status")) # , variable.name = "pc", value.name = "variance"
pca_vars_perc_melted$frac <- pca_vars_perc_melted$value/100 # value was "variance"
pca_vars_perc_melted$pc <- recode(pca_vars_perc_melted$variable, "'Comp.1'='PC1';'Comp.2'='PC2';'Comp.3'='PC3'") # variable was "pc"
ggplot(pca_vars_perc_melted, aes(x=variable, y=frac)) + geom_boxplot(aes(fill=health_status), alpha=1) + ggtitle("Box Plot of PCA Variance (Fraction) for the 3 PC's") + geom_hline(aes(yintercept=sphere_var)) + geom_text(aes(0,sphere_var,label = "sphere", vjust=-1, hjust=-0.4)) + scale_fill_manual(values=cols, name="Health", breaks=c("healthy", "trich"), labels=c("Healthy", "Infected"), guide = guide_legend(direction = "vertical")) + xlab("") + ylab("") + theme(axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
ls()
head(pca_vars_perc_melted)
ggplot(pca_vars_perc_melted, aes(x=variable, y=frac))
ggplot(tracks, aes(x=cell_id, y=frame))
pca_vars_perc_melted <- melt(pca_vars_perc, id.vars=c("cell_id")) # , variable.name = "pc", value.name = "variance"
pca_vars_perc_melted$frac <- pca_vars_perc_melted$value/100 # value was "variance"
rm(list=ls())
# script to plot the PCA of convex hulls and alphashapes
# PARAMS
tracks_path <- "/Users/maiasmith/Documents/ICL/data/trackmate_tracks.RData"
spaces.surf_path <- "/Users/maiasmith/Documents/ICL/data/spaces.surf.RData"
sphere_var <- (1/3)
cols <- c("#005EE8", "#D23940") #cols <- c("#005EE8", "#FF460C")
# LIBRARIES
library(ggplot2)
library(car)
library(reshape2)
# SOURCES
source("/Users/maiasmith/Documents/ICL/scripts/functions.track_space.R")
# ------------------------
load(tracks_path)
load(spaces.surf_path)
cell_ids <- unique(tracks$cell_id)
cell_ids_health <- unique(tracks[,c("cell_id","health_status")])
# ---------------------- PCA VARIANCE ON ALPHASHAPES -------------------------- #
# get pca variances
# --> count
pca_vars <- do.call("rbind", lapply(cell_ids, function(cur.cell_id) get_pca_vars(cur.cell_id, spaces.surf)))
# --> percentages
pca_vars_perc <- pca_vars
pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id"))] <- t(apply( pca_vars_perc[-which(colnames(pca_vars_perc) %in% c("cell_id"))], 1, function(x) { x*100.0/sum(x) } ))
# plot
pca_vars_perc_melted <- melt(pca_vars_perc, id.vars=c("cell_id")) # , variable.name = "pc", value.name = "variance"
pca_vars_perc_melted$frac <- pca_vars_perc_melted$value/100 # value was "variance"
pca_vars_perc_melted$pc <- recode(pca_vars_perc_melted$variable, "'Comp.1'='PC1';'Comp.2'='PC2';'Comp.3'='PC3'") # variable was "pc"
ggplot(pca_vars_perc_melted, aes(x=variable, y=frac)) + geom_boxplot(alpha=1)
# PARAMS
tracks_path <- "/Users/maiasmith/Documents/ICL/data/trackmate_tracks.RData"
hulls_path <- '/Users/maiasmith/Documents/ICL/data/hulls.RData'
spaces.surf_path <- "/Users/maiasmith/Documents/ICL/data/spaces.surf.RData"
sphere_var <- (1/3)
cols <- c("#005EE8", "#D23940") #cols <- c("#005EE8", "#FF460C")
# LIBRARIES
library(ggplot2)
library(car)
library(reshape2)
# SOURCES
source("/Users/maiasmith/Documents/ICL/scripts/functions.track_space.R")
# ------------------------
load(tracks_path)
load(hulls_path)
load(spaces.surf_path)
cell_ids <- unique(tracks$cell_id)
cell_ids_health <- unique(tracks[,c("cell_id","health_status")])
# get pca variances
# --> count
pca_vars_ashape <- do.call("rbind", lapply(cell_ids, function(cur.cell_id) get_pca_vars(cur.cell_id, spaces.surf)))
# --> percentages
pca_vars_ashape_perc <- pca_vars_ashape
pca_vars_ashape_perc[-which(colnames(pca_vars_ashape_perc) %in% c("cell_id"))] <- t(apply( pca_vars_ashape_perc[-which(colnames(pca_vars_ashape_perc) %in% c("cell_id"))], 1, function(x) { x*100.0/sum(x) } ))
pca_vars_ashape_perc_melted <- melt(pca_vars_ashape_perc, id.vars=c("cell_id")) # , variable.name = "pc", value.name = "variance"
pca_vars_ashape_perc_melted$frac <- pca_vars_ashape_perc_melted$value/100 # value was "variance"
pca_vars_ashape_perc_melted$pc <- recode(pca_vars_ashape_perc_melted$variable, "'Comp.1'='PC1';'Comp.2'='PC2';'Comp.3'='PC3'") # variable was "pc"
pca_vars_ashape_perc_melted$type <- "Alpha Shape"
# PARAMS
tracks_path <- "/Users/maiasmith/Documents/ICL/data/trackmate_tracks.RData"
hulls_path <- '/Users/maiasmith/Documents/ICL/data/hulls.RData'
spaces.surf_path <- "/Users/maiasmith/Documents/ICL/data/spaces.surf.RData"
sphere_var <- (1/3)
cols <- c("#005EE8", "#D23940") #cols <- c("#005EE8", "#FF460C")
# LIBRARIES
library(ggplot2)
library(car)
library(reshape2)
# SOURCES
source("/Users/maiasmith/Documents/ICL/scripts/functions.track_space.R")
# ------------------------
load(tracks_path)
load(hulls_path)
load(spaces.surf_path)
cell_ids <- unique(tracks$cell_id)
cell_ids_health <- unique(tracks[,c("cell_id","health_status")])
# --------------------- GET SURFACE COORDINATES FOR CONVEX HULLS ---------------------- #
chull.surf <- data.frame(cell_id=character(), x=numeric(), y=numeric(), z=numeric())
for (cur_cell_id in cell_ids) {
cur_space_raw <- hulls[[cur_cell_id]][["hull"]]
cur_space <- data.frame(x=cur_space_raw[,1], y=cur_space_raw[,2], z=cur_space_raw[,3])
cur_space <- cbind(cell_id=cur_cell_id, cur_space)
chull.surf <- rbind(chull.surf, cur_space)
}
rm(list=ls())
shiny::runApp()
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
shiny::runApp()
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
devtools::install_github('rstudio/rsconnect')
shinyapps::setAccountInfo(name='msmith', token='BF12EB71B79BF2192FF9DFFA0962CE13', secret='faJ/tz0BOK7MugMJvOfHoeNoo5C5xd5oqV7ko5T3')
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
shiny::runApp('~/git_repos/ExAKHTLI_app')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shinyapps::deployApp('/Users/maiasmith/git_repos/exakhtli/ExAHKTLI24102015/ExAHKTLI24102015/shiny_scripts/explore/')
shiny::runApp('~/git_repos/ExAKHTLI_app')
shiny::runApp()
shiny::runApp('~/git_repos/ExAKHTLI_app')
shiny::runApp('~/git_repos/ExAKHTLI_app')
shiny::runApp('~/git_repos/ExAKHTLI_app')
shiny::runApp()
quit
quit()
shiny::runApp('~/git_repos/ExAKHTLI_app')
